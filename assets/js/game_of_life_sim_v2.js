function createGrid(){const n=new Array(numBlocksX);for(let e=0;e<numBlocksX;e++)n[e]=new Array(numBlocksY);return n}function initializeGrid(){for(let n=0;n<numBlocksX;n++)for(let e=0;e<numBlocksY;e++)grid[n][e]=Math.random()<.1?1:0}function animate(){if(updateGrid(),drawGrid(),performance.now()<6e4)requestAnimationFrame(animate);else{const n=new Image;n.src=canvas.toDataURL(),document.body.innerHTML="",document.body.appendChild(n)}}function updateGrid(){const n=createGrid();for(let e=0;e<numBlocksX;e++)for(let i=0;i<numBlocksY;i++){const t=countNeighbors(e,i),c=1===grid[e][i];n[e][i]=c&&(t<2||t>3)?0:c||3!==t?grid[e][i]:1}grid=n}function countNeighbors(n,e){let i=0;for(let t=-1;t<=1;t++)for(let c=-1;c<=1;c++){if(0===t&&0===c)continue;const a=n+t,o=e+c;a>=0&&a<numBlocksX&&o>=0&&o<numBlocksY&&(i+=grid[a][o])}return i}function drawGrid(){ctx.clearRect(0,0,canvas.width,canvas.height);for(let n=0;n<numBlocksX;n++)for(let e=0;e<numBlocksY;e++){const i=1===grid[n][e];ctx.fillStyle=i?"rgba(65, 184, 131, 1)":"rgba(0, 0, 0, 0)";const t=n*blockSize,c=e*blockSize;ctx.fillRect(t,c,blockSize,blockSize)}}const canvas=document.createElement("canvas");document.body.appendChild(canvas);const ctx=canvas.getContext("2d"),numBlocksX=50,numBlocksY=50,maxDimension=Math.min(window.innerWidth,window.innerHeight),canvasSize=Math.min(maxDimension,350);canvas.width=canvasSize,canvas.height=canvasSize,canvas.style.marginLeft=`${(window.innerWidth-canvasSize)/2}px`;const blockSize=canvasSize/Math.max(numBlocksX,numBlocksY);let grid=createGrid();initializeGrid(),animate();